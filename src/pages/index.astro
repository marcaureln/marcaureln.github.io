---
import { type CollectionEntry, getCollection } from "astro:content";
import SocialList from "@/components/SocialList.astro";
import PostPreview from "@/components/blog/PostPreview.astro";
import Note from "@/components/note/Note.astro";
import { getAllPosts } from "@/data/post";
import PageLayout from "@/layouts/Base.astro";
import { collectionDateSort } from "@/utils/date";

// Posts
const MAX_POSTS = 10;
const allPosts = await getAllPosts();
const allPostsByDate = allPosts
	.sort(collectionDateSort)
	.slice(0, MAX_POSTS) as CollectionEntry<"post">[];

// Notes
const MAX_NOTES = 5;
const allNotes = await getCollection("note");
const latestNotes = allNotes.sort(collectionDateSort).slice(0, MAX_NOTES);

// Projects
const projects: Array<{ title: string; desc: string; href: string }> = [
	{
		title: "Meditations",
		desc: "A book's quote keeping Android app (Flutter, PocketBase)",
		href: "https://play.google.com/store/apps/details?id=com.marcaureln.meditations",
	},
	{
		title: "Adrili & Adrili Pro",
		desc: "A Quality of Working Life (QWL) Android & iOS app (Flutter)",
		href: "https://www.adrili.net/Telecharger-l-app-.LB.htm",
	},
	{
		title: "Libshop",
		desc: "A classified ads website for Liberia (Nuxt 3, Prisma, Postgres)",
		href: "https://libshop.net",
	},
	{
		title: "CID ESATIC",
		desc: "University's research center website (Nuxt 3, PocketBase)",
		href: "https://cid.esatic.ci",
	},
	{
		title: "eCollectivit√©s",
		desc: "Bachelor's final year project (Nuxt 2, Express, Prisma, Postgres)",
		href: "https://ecollectivites.marcaureln.com",
	},
];
---

<PageLayout meta={{ title: "Home" }}>
	<section>
		<h1 class="title mb-6">I'm Alex,</h1>
		<p class="mb-4">
			Web developer and co-founder of
			<a href="https://inputstudio.co" target="_blank">Input Studio</a>. Machine Learning enthusiast
			and privacy advocate.
		</p>
		<SocialList />
	</section>
	<section class="mt-16">
		<h2 class="title text-accent mb-6 text-xl"><a href="/posts/">Posts</a></h2>
		<ul class="space-y-4" role="list">
			{
				allPostsByDate.map((p) => (
					<li class="grid gap-2 sm:grid-cols-[auto_1fr]">
						<PostPreview post={p} />
					</li>
				))
			}
		</ul>
	</section>
	<section class="mt-16">
		<h2 class="title text-accent mb-6 text-xl">Projects</h2>
		<ul class="space-y-4 sm:space-y-2">
			{
				projects.map(({ href, title, desc }) => (
					<li>
						<a
							href={href}
							target="_blank"
							rel="noopener noreferrer"
							class="cactus-link inline-block"
						>
							{title}
						</a>
						: <p class="inline-block sm:mt-2">{desc}</p>
					</li>
				))
			}
		</ul>
	</section>
	{
		latestNotes.length > 0 && (
			<section class="mt-16">
				<h2 class="title text-accent mb-6 text-xl">
					<a href="/notes/">Notes</a>
				</h2>
				<ul class="space-y-4" role="list">
					{latestNotes.map((note) => (
						<li>
							<Note note={note} as="h3" isPreview />
						</li>
					))}
				</ul>
			</section>
		)
	}
</PageLayout>
